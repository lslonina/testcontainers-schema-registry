/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.5.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url 'https://packages.confluent.io/maven' }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.testcontainers:testcontainers:1.17.5'
    testImplementation 'org.testcontainers:kafka:1.17.5'
    testImplementation 'org.assertj:assertj-core:3.23.1'

    implementation 'io.confluent:kafka-avro-serializer:7.2.1'

    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.apache.kafka:kafka-clients:3.3.1'

    implementation 'ch.qos.logback:logback-core:1.4.4'
    implementation 'ch.qos.logback:logback-classic:1.4.4'
    implementation 'org.slf4j:slf4j-api:2.0.3'
}

application {
    // Define the main class for the application.
    mainClass = 'testcontainers.schema.registry.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

avro {
    createSetters = false
}